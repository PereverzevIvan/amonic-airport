{
    "swagger": "2.0",
    "info": {
        "description": "Это API лабораторной работы 1 по дисциплине \"Разработка бизнес-приложений\".\nТема проекта - аэропорт.",
        "title": "Разработка бизнес-приложений - лаба 1",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/country/{id}": {
            "get": {
                "description": "Получение информации о стране по ее числовому ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get Country by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Country ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Country"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Вход пользователя по адресу электронной почты и паролю.\nВозвращает два токена для авторизации в куках.\nНазвание кук: \"access-token\" и \"refresh-token\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "login success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Выход пользователя из системы",
                "tags": [
                    "Auth"
                ],
                "summary": "User Logout",
                "responses": {
                    "200": {
                        "description": "logout success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/office/{id}": {
            "get": {
                "description": "Получение информации об офисе по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Office"
                ],
                "summary": "Get Office by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Office ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Office"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/offices": {
            "get": {
                "description": "Получение информации о всех офисах",
                "tags": [
                    "Office"
                ],
                "summary": "Get all offices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Office"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/refresh": {
            "get": {
                "description": "Получить новую пару",
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh token",
                "responses": {
                    "200": {
                        "description": "refresh success"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/schedules": {
            "get": {
                "description": "Получение cписка полетов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schedules"
                ],
                "summary": "Get All Schedules",
                "parameters": [
                    {
                        "type": "string",
                        "name": "flight_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "outbound",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Schedule"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/user-sessions/": {
            "get": {
                "description": "Получить список сессий пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User sessions"
                ],
                "summary": "Get user sessions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Get only invalid sessions of user",
                        "name": "only_invalid_sessions",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit of records in page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserSession"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {}
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            },
            "patch": {
                "description": "Установка причины неудачного выхода из системы",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User sessions"
                ],
                "summary": "Set Unsuccessfull Logout Reason",
                "parameters": [
                    {
                        "description": "Информация о сессии",
                        "name": "session_data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.UserSession"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Получение информации о пользователе по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Фильтр по id офиса",
                        "name": "office_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Получение информации о всех пользователях",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Фильтр по id офиса",
                        "name": "office_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "j.doe@amonic.com"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "models.Aircraft": {
            "type": "object",
            "properties": {
                "business_seats": {
                    "type": "integer"
                },
                "economy_seats": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "make_model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "total_seats": {
                    "type": "integer"
                }
            }
        },
        "models.Airport": {
            "type": "object",
            "properties": {
                "country_id": {
                    "type": "integer"
                },
                "iata_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Office": {
            "type": "object",
            "properties": {
                "contact": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Route": {
            "type": "object",
            "properties": {
                "arrival_airport": {
                    "$ref": "#/definitions/models.Airport"
                },
                "arrival_airport_id": {
                    "type": "integer"
                },
                "departure_airport": {
                    "$ref": "#/definitions/models.Airport"
                },
                "departure_airport_id": {
                    "type": "integer"
                },
                "distance": {
                    "type": "integer"
                },
                "flight_time": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "properties": {
                "aircraft": {
                    "$ref": "#/definitions/models.Aircraft"
                },
                "aircraft_id": {
                    "type": "integer"
                },
                "confirmed": {
                    "type": "boolean"
                },
                "date": {
                    "type": "string"
                },
                "economy_price": {
                    "type": "number"
                },
                "flight_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "outbound": {
                    "type": "string"
                },
                "route": {
                    "$ref": "#/definitions/models.Route"
                },
                "route_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "birthday": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "office_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "models.UserSession": {
            "type": "object",
            "properties": {
                "crash_reason_type": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "invalid_logout_reason": {
                    "type": "string"
                },
                "login_at": {
                    "type": "string"
                },
                "logout_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "access-token",
            "in": "cookie"
        }
    }
}