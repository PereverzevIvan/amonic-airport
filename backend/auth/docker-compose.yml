services:
  golang:
    build: .
    image: golang:latest
    container_name: golang_project # Название контейнера
    ports:
      - "3000:3000"  # Пробрасываем порт наружу
    volumes:
      - .:/app  # Примонтируем текущую директорию внутрь контейнера
    depends_on:
      - mysql
        # condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "--fail", "http://localhost:3000"]  # Проверка работоспособности
    #   interval: 30s  # Проверка каждые 30 секунд
    #   timeout: 5s  # Таймаут проверки 5 секунд
    #   retries: 3  # После 3 неудачных попыток контейнер будет перезапущен
    #   start_period: 10s  # Задержка перед началом первой проверки
    restart: on-failure
    networks:
      - database

  mysql:
    image: mysql:8.0
    container_name: auth_database
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: airplanes
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - 3306:3306
    volumes:
      - ./storage/database/:/var/lib/mysql/
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "admin", "-padmin"]
      interval: 10s   # Интервал между проверками
      timeout: 5s     # Таймаут выполнения команды
      retries: 5      # Количество неудачных проверок перед пометкой как "unhealthy"
    networks:
      - database

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: admin
    networks:
      - database

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    ports:
      - "5043:8080"
    environment:
      SWAGGER_JSON: /swagger/swagger.yaml
    volumes:
      - ./api/swagger.yaml:/swagger/swagger.yaml
      - ./api/swagger-config.yaml:/usr/share/nginx/html/swagger-config.yaml
    networks:
      - database

networks:
  database:
    driver: bridge
